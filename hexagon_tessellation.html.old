<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hexagon Circle Tessellation</title>
    <style>
        canvas {
            display: block;
            margin: 0 auto;
            background-color: #f0f0f0;
        }
    </style>
</head>
<body>
    <canvas id="hexCanvas"></canvas>

    <script>
        const canvas = document.getElementById('hexCanvas');
        const ctx = canvas.getContext('2d');

        // Resize canvas to fit window
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        const centerX = canvas.width / 2;
        const centerY = canvas.height / 2;
        const maxRadius = Math.min(centerX, centerY) * 0.9;  // Circle boundary

        function drawHexagon(x, y, size) {
            ctx.beginPath();
            for (let i = 0; i < 6; i++) {
                const angle = Math.PI / 3 * i;
                const dx = size * Math.cos(angle);
                const dy = size * Math.sin(angle);
                if (i === 0) {
                    ctx.moveTo(x + dx, y + dy);
                } else {
                    ctx.lineTo(x + dx, y + dy);
                }
            }
            ctx.closePath();
            ctx.stroke();
        }

        function drawTessellation() {
            const hexSize = 50; // Base hexagon size
            const hexHeight = Math.sqrt(3) * hexSize;
            let radius = 0;

            // Loop to draw multiple rings of hexagons
            for (let r = 0; r < maxRadius; r += hexSize * 1.5) {
                let hexCount = Math.ceil(2 * Math.PI * r / hexHeight);
                if (hexCount < 6) hexCount = 6;  // Minimum 6 hexagons in a ring

                // Scale down the size of the hexagon as radius increases
                let sizeFactor = 1 - (r / maxRadius);  // Decrease size with distance
                let currentHexSize = hexSize * sizeFactor;

                // Calculate angle and position each hexagon
                for (let i = 0; i < hexCount; i++) {
                    

